version: "3.4"

services:
  backend:
    image: baserow/backend:1.34.2
    restart: unless-stopped
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_PUBLIC_URL:?}
      SECRET_KEY: ${SECRET_KEY:?}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?}
      REDIS_PASSWORD: ${REDIS_PASSWORD:?}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST:-smtp.gmail.com}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT:-587}
      EMAIL_SMTP_USE_TLS: ${EMAIL_SMTP_USE_TLS:-false}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER:-email@gmail.com}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-email@gmail.com}
      BASEROW_JWT_SIGNING_KEY: ${BASEROW_JWT_SIGNING_KEY:-}
      BASEROW_EXTRA_ALLOWED_HOSTS: ${BASEROW_EXTRA_ALLOWED_HOSTS:-}
      BASEROW_S3_ACCESS_KEY_ID: ${BASEROW_S3_ACCESS_KEY_ID:-}
      BASEROW_S3_SECRET_ACCESS_KEY: ${BASEROW_S3_SECRET_ACCESS_KEY:-}
      BASEROW_S3_BUCKET: ${BASEROW_S3_BUCKET:-}
      BASEROW_S3_REGION: ${BASEROW_S3_REGION:-}
      BASEROW_S3_ENDPOINT_URL: ${BASEROW_S3_ENDPOINT_URL:-}
      BASEROW_S3_USE_PATH_STYLE_ENDPOINT: true
      BASEROW_BACKEND_DEBUG: ${BASEROW_BACKEND_DEBUG:-false}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME:-baserow}
      DATABASE_USER: ${DATABASE_USER:-baserow}
      REDIS_HOST: redis
      PRIVATE_BACKEND_URL: http://backend:8000
    volumes:
      - media:/baserow/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - baserow_net
      - coolify_proxy_network
    labels:
      - "traefik.enable=true"
      # Priorités hautes pour "gagner" contre la règle de Coolify
      - "traefik.http.routers.baserow-ws.rule=Host(`baserow.emeraudeia.fr`) && PathPrefix(`/api/ws`)"
      - "traefik.http.routers.baserow-ws.priority=200"
      - "traefik.http.routers.baserow-ws.service=baserow-backend-svc"
      - "traefik.http.routers.baserow-api.rule=Host(`baserow.emeraudeia.fr`) && PathPrefix(`/api`)"
      - "traefik.http.routers.baserow-api.priority=150"
      - "traefik.http.routers.baserow-api.service=baserow-backend-svc"
      - "traefik.http.services.baserow-backend-svc.loadbalancer.server.port=8000"
      - "traefik.http.services.baserow-backend-svc.loadbalancer.sticky.cookie=true"

  web-frontend:
    image: baserow/web-frontend:1.34.2
    restart: unless-stopped
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_PUBLIC_URL:?}
      PRIVATE_BACKEND_URL: http://backend:8000
    depends_on:
      backend:
        condition: service_started
    networks:
      - baserow_net
      - coolify_proxy_network
    # PAS DE LABELS ICI - On laisse Coolify (via le champ FQDN) gérer ce service

  celery:
    image: baserow/backend:1.34.2
    restart: unless-stopped
    command: celery-worker
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_PUBLIC_URL:?}
      SECRET_KEY: ${SECRET_KEY:?}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?}
      REDIS_PASSWORD: ${REDIS_PASSWORD:?}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST:-smtp.gmail.com}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT:-587}
      EMAIL_SMTP_USE_TLS: ${EMAIL_SMTP_USE_TLS:-false}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER:-email@gmail.com}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-email@gmail.com}
      BASEROW_JWT_SIGNING_KEY: ${BASEROW_JWT_SIGNING_KEY:-}
      BASEROW_EXTRA_ALLOWED_HOSTS: ${BASEROW_EXTRA_ALLOWED_HOSTS:-}
      BASEROW_S3_ACCESS_KEY_ID: ${BASEROW_S3_ACCESS_KEY_ID:-}
      BASEROW_S3_SECRET_ACCESS_KEY: ${BASEROW_S3_SECRET_ACCESS_KEY:-}
      BASEROW_S3_BUCKET: ${BASEROW_S3_BUCKET:-}
      BASEROW_S3_REGION: ${BASEROW_S3_REGION:-}
      BASEROW_S3_ENDPOINT_URL: ${BASEROW_S3_ENDPOINT_URL:-}
      BASEROW_S3_USE_PATH_STYLE_ENDPOINT: true
      BASEROW_BACKEND_DEBUG: ${BASEROW_BACKEND_DEBUG:-false}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME:-baserow}
      DATABASE_USER: ${DATABASE_USER:-baserow}
      REDIS_HOST: redis
      PRIVATE_BACKEND_URL: http://backend:8000
    volumes:
      - media:/baserow/media
    depends_on:
      - backend
    healthcheck: 
      test: ["CMD-SHELL", "true"]
    networks:
      - baserow_net

  celery-export-worker:
    image: baserow/backend:1.34.2
    restart: unless-stopped
    command: celery-exportworker
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_PUBLIC_URL:?}
      SECRET_KEY: ${SECRET_KEY:?}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?}
      REDIS_PASSWORD: ${REDIS_PASSWORD:?}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST:-smtp.gmail.com}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT:-587}
      EMAIL_SMTP_USE_TLS: ${EMAIL_SMTP_USE_TLS:-false}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER:-email@gmail.com}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-email@gmail.com}
      BASEROW_JWT_SIGNING_KEY: ${BASEROW_JWT_SIGNING_KEY:-}
      BASEROW_EXTRA_ALLOWED_HOSTS: ${BASEROW_EXTRA_ALLOWED_HOSTS:-}
      BASEROW_S3_ACCESS_KEY_ID: ${BASEROW_S3_ACCESS_KEY_ID:-}
      BASEROW_S3_SECRET_ACCESS_KEY: ${BASEROW_S3_SECRET_ACCESS_KEY:-}
      BASEROW_S3_BUCKET: ${BASEROW_S3_BUCKET:-}
      BASEROW_S3_REGION: ${BASEROW_S3_REGION:-}
      BASEROW_S3_ENDPOINT_URL: ${BASEROW_S3_ENDPOINT_URL:-}
      BASEROW_S3_USE_PATH_STYLE_ENDPOINT: true
      BASEROW_BACKEND_DEBUG: ${BASEROW_BACKEND_DEBUG:-false}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME:-baserow}
      DATABASE_USER: ${DATABASE_USER:-baserow}
      REDIS_HOST: redis
      PRIVATE_BACKEND_URL: http://backend:8000
    volumes:
      - media:/baserow/media
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "true"]
    networks:
      - baserow_net

  celery-beat-worker:
    image: baserow/backend:1.34.2
    restart: unless-stopped
    command: celery-beat
    environment:
      BASEROW_PUBLIC_URL: ${BASEROW_PUBLIC_URL:?}
      SECRET_KEY: ${SECRET_KEY:?}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:?}
      REDIS_PASSWORD: ${REDIS_PASSWORD:?}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST:-smtp.gmail.com}
      EMAIL_SMTP_PORT: ${EMAIL_SMTP_PORT:-587}
      EMAIL_SMTP_USE_TLS: ${EMAIL_SMTP_USE_TLS:-false}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER:-email@gmail.com}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD:-}
      FROM_EMAIL: ${FROM_EMAIL:-email@gmail.com}
      BASEROW_JWT_SIGNING_KEY: ${BASEROW_JWT_SIGNING_KEY:-}
      BASEROW_EXTRA_ALLOWED_HOSTS: ${BASEROW_EXTRA_ALLOWED_HOSTS:-}
      BASEROW_S3_ACCESS_KEY_ID: ${BASEROW_S3_ACCESS_KEY_ID:-}
      BASEROW_S3_SECRET_ACCESS_KEY: ${BASEROW_S3_SECRET_ACCESS_KEY:-}
      BASEROW_S3_BUCKET: ${BASEROW_S3_BUCKET:-}
      BASEROW_S3_REGION: ${BASEROW_S3_REGION:-}
      BASEROW_S3_ENDPOINT_URL: ${BASEROW_S3_ENDPOINT_URL:-}
      BASEROW_S3_USE_PATH_STYLE_ENDPOINT: true
      BASEROW_BACKEND_DEBUG: ${BASEROW_BACKEND_DEBUG:-false}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME:-baserow}
      DATABASE_USER: ${DATABASE_USER:-baserow}
      REDIS_HOST: redis
      PRIVATE_BACKEND_URL: http://backend:8000
    volumes:
      - media:/baserow/media
    depends_on:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "true"]
    networks:
      - baserow_net

  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER:-baserow}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:?}
      POSTGRES_DB: ${DATABASE_NAME:-baserow}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-baserow}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - baserow_net

  redis:
    image: redis:6
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:?}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:?}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - baserow_net

  volume-permissions-fixer:
    image: bash:4.4
    command: chown 9999:9999 -R /baserow/media
    volumes:
      - media:/baserow/media
    restart: "no"
    networks:
      - baserow_net

volumes:
  pgdata:
  media:

networks:
  baserow_net:
    driver: bridge
  coolify_proxy_network: 
    external: true
    name: coolify
